
name: EulerPublisher ðŸš€
on: [push]
jobs:
  build-openeuler:
    strategy:
      matrix:
        include:
          
          - arch: x86_64
            runner: ubuntu-24.04
          
          - arch: aarch64
            runner: ubuntu-24.04-arm
          
    
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      
      - name: Login to docker.io
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.{{ registry | upper }}_USERNAME }}
          password: ${{ secrets.{{ registry | upper }}_TOKEN }}
      
      - name: Login to quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.{{ registry | upper }}_USERNAME }}
          password: ${{ secrets.{{ registry | upper }}_TOKEN }}
      

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        uses: docker/build-push-action@v6
        id: build
        with: 
          platforms: ${{ matrix.arch }}
          tags: |
            
            docker.io/zhihang161013/openeuler
            
            quay.io/zhihang161013/openeuler
            
          file: ${{ github.workspace }}/openeuler/Dockerfile
          context: ${{ github.workspace }}/openeuler
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-openeuler-${{ matrix.arch }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  push-openeuler:
    runs-on: ubuntu-24.04
    needs:
      - build-openeuler
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-openeuler-*
          merge-multiple: true

      
      - name: Login to docker.io
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.{{ registry | upper }}_USERNAME }}
          password: ${{ secrets.{{ registry | upper }}_TOKEN }}
      
      - name: Login to quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.{{ registry | upper }}_USERNAME }}
          password: ${{ secrets.{{ registry | upper }}_TOKEN }}
      

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          
          docker buildx imagetools create -t docker.io/zhihang161013/openeuler:25.03 \
            $(printf 'zhihang161013/openeuler@sha256:%s ' *)
          
          docker buildx imagetools create -t quay.io/zhihang161013/openeuler:25.03 \
            $(printf 'zhihang161013/openeuler@sha256:%s ' *)
          

      - name: Notify Status to EulerPublisher
        uses: eferraris/rabbit-sender@v1
        with:
          MESSAGE: |
            {
              "repository": "zhihang161013",
              "name": "openeuler",
              "tag": "25.03",
              "status": "${{ job.status }}",
              "arch": "${{ matrix.arch }}",
              "runner": "${{ matrix.runner }}"
            }
          RABBIT_EXCHANGE_NAME: "eulerpublisher"
          ROUTING_KEY: "tracker"
          RABBIT_HOST: ${{ secrets.RABBIT_HOST }}
          RABBIT_USERNAME: ${{ secrets.RABBIT_USERNAME }}
          RABBIT_PASSWORD: ${{ secrets.RABBIT_PASSWORD }}
          RABBIT_PORT: 5672
          RABBIT_USE_SSL: false
          DURABLE: false

